name: Tests with Authentication

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-with-auth:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
          MONGO_INITDB_DATABASE: test_db
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "SECRET_KEY=test_secret_key_for_jwt_github_actions" >> $GITHUB_ENV
        echo "ALGORITHM=HS256" >> $GITHUB_ENV
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV
        echo "MONGODB_URI=mongodb://admin:password@localhost:27017/test_db?authSource=admin" >> $GITHUB_ENV

    - name: Wait for MongoDB to be ready
      run: |
        timeout 30 bash -c 'until nc -z localhost 27017; do sleep 1; done'

    - name: Run tests (using mocks for authentication)
      working-directory: ./api
      run: |
        # Los tests ya están configurados para usar dependency_overrides y mocks
        pytest tests/ -v --tb=short

    - name: Run tests with coverage
      working-directory: ./api
      run: |
        pytest tests/ --cov=controllers --cov=services --cov-report=xml --cov-report=term-missing -v

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./api/coverage.xml
        fail_ci_if_error: false
        
    - name: Test summary
      if: always()
      working-directory: ./api
      run: |
        echo "✅ Tests completed successfully"
        echo "All tests use mocks and dependency_overrides for authentication"
        echo "No real API server needed as tests are isolated"
